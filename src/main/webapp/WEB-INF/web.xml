<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns="http://xmlns.jcp.org/xml/ns/javaee" 
xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" version="3.1">
  <display-name>WebStudy04</display-name>

	<welcome-file-list>
		<welcome-file>index.do</welcome-file>
	</welcome-file-list>

<!--	상위 컨테이너를 형성하기 위한 빈 메타 데이터 등록 파일의 위치 설정-->
<context-param>
	<param-name>contextConfigLocation</param-name>
	<param-value>classpath:kr/or/ddit/spring/*.xml</param-value>
</context-param>

<!--	서블릿 컨텍스트가 초기화 되는 시점에(서버가 구동되는 시점이라는뜻) 발생하는 이벤트를 처리하는 핸들러(리스너) 등록
			: root web application context 형성-->
<listener>
	<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
</listener>
<!--	request-->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
<!-- Put / Delete 요청의 경우 , WAS가 해당 요청을 파싱하지 않도록 설정되어 있음.
		WAS를 대신하여 요청을 파싱하기 위한 필터-->
	<filter>
		<filter-name>GeneratePrincipalFilter</filter-name>
		<filter-class>kr.or.ddit.login.auth.GeneratePrincipalFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>GeneratePrincipalFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter>
		<filter-name>AuthenticationCheckFilter</filter-name>
		<filter-class>kr.or.ddit.login.auth.AuthenticationCheckFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>AuthenticationCheckFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter>
		<filter-name>AuthorizationCheckFilter</filter-name>
		<filter-class>kr.or.ddit.login.auth.AuthorizationCheckFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>AuthorizationCheckFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>FormContentFilter</filter-name>
		<filter-class>org.springframework.web.filter.FormContentFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>FormContentFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
<!-- Multipart request를 wrapper request로 변경.-->
	<filter>
		<filter-name>MultipartFilter</filter-name>
		<filter-class>org.springframework.web.multipart.support.MultipartFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>MultipartFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>


<!-- Front Controller Pattern에 따라 모든 요청(정적자원포함)에 대한 사전처리를 담당함-->
<!--	하위 컨테이너를 생성하기 위한 설정 파일의 위치 정보를 파라미터로 전달함-->
	<servlet>
		<servlet-name>springDispatcherServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/springmvc/*.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
		<multipart-config></multipart-config>
	</servlet>

	<servlet-mapping>
		<servlet-name>springDispatcherServlet</servlet-name>
		<url-pattern>/</url-pattern>
		<url-pattern>/index.do</url-pattern>

	</servlet-mapping>

</web-app>